@page
@model HBSkincare.Pages.Inventory.RawMaterial.RawMaterialPurchaseCrudModel
@{
    ViewData["Title"] = Model.Editing ? $"Raw Material Purchase- {Model.Purchase.RawMaterial.MaterialName}" : "New Raw Material Order";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>
<br />
@if (Model.Editing)
{
    <div>
        <form method="post" asp-page-handler="UpdateQty">
            <div class="row pb-2">
                <div class="col-4">
                    <label asp-for="Purchase.CurrentInventory"></label>
                    <div class="input-group mb-3">
                        <input type="text" id="CurrentInventory" class="form-control" aria-describedby="basic-addon1" value="@Model.Purchase.CurrentInventory" readonly>
                        <div class="input-group-append">
                            <span class="input-group-text" id="basic-addon1">@Model.Purchase.UnitOfMeasure</span>
                        </div>
                    </div>
                </div>
                <div class="col-4">
                    <label for="InventoryToRemove">Amount Used</label>
                    <input type="number" class="form-control" id="InventoryToRemove" value="0" onchange="updateRemainingInventory()" />
                </div>
                <div class="col-4">
                    <label for="Remaining">Amount Remaining</label>

                    <div class="input-group mb-3">
                        <input type="text" class="form-control" id="Remaining" name="RemainingInventory" aria-describedby="basic-addon3" readonly>
                        <div class="input-group-append">
                            <span class="input-group-text" id="basic-addon3">@Model.Purchase.UnitOfMeasure</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-2 offset-10">
                    <input type="submit" class="btn btn-primary btn-block" value="Confirm" />
                </div>
            </div>
        </form>
    </div>
}

<br />


@if (Model.Editing)
{
    <div class="row">
        <div class="col-2 offset-10 text-right">
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" id="editMode" onclick="editMode()">
                <label class="custom-control-label" for="editMode">Edit Mode</label>
            </div>
        </div>
    </div>
}

<form method="post">
    <div class="row">
        <div class="col-4">
            <span class="font-weight-bold">Raw Material</span>
            <select class="CanBeDisabled custom-select" asp-for="ChosenRawMaterialId" asp-items="Model.RawMaterials.Select(e => new SelectListItem { Value = e.RawMaterialItemId.ToString(), Text= e.MaterialName })"></select>
        </div>
        <div class="col-3">
            <br />
            <a class="canBeHidden btn btn-block btn-outline-info" asp-page="/Inventory/RawMaterial/AddNewRawMaterial">Add New Raw Material</a>
        </div>
    </div>

</form>





<script>
    function updateRemainingInventory() {
        var initial = document.getElementById("CurrentInventory");
        var delta = document.getElementById("InventoryToRemove");
        var final = document.getElementById("Remaining");
        final.value = initial.value - delta.value;
    }

    function editMode() {
        var editing = document.getElementById("editMode");
        if (editing.checked) {
            var hiddenItems = document.getElementsByClassName("canBeHidden");
            for (var i = 0; i < hiddenItems.length; i++) {
                hiddenItems[i].style.visibility = 'visible';
            }

            var disabledItems = document.getElementsByClassName("CanBeDisabled");
            for (var i = 0; i < hiddenItems.length; i++) {
                disabledItems[i].disabled = false;
            }
        }
        else {
            var hiddenItems = document.getElementsByClassName("canBeHidden");
            for (var i = 0; i < hiddenItems.length; i++) {
                hiddenItems[i].style.visibility = 'hidden';
            }

            var disabledItems = document.getElementsByClassName("CanBeDisabled");
            for (var i = 0; i < hiddenItems.length; i++) {
                disabledItems[i].disabled = true;
            }
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        editMode();
    }, false);



</script>

